<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="d0/d29/CSSUtils_8h" kind="file" language="C++">
    <compoundname>CSSUtils.h</compoundname>
    <includes local="no">cstdlib</includes>
    <includes local="no">string</includes>
    <includes local="no">iterator</includes>
    <includes local="no">vector</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="d2/d2d/CSSParser_8h" local="yes">cssparser/CSSParser.h</includedby>
    <includedby refid="de/df5/CSSUtils_8cpp" local="yes">cssparser/CSSUtils.cpp</includedby>
    <includedby refid="df/d0a/main_8cpp" local="yes">cssparser/main.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>iterator</label>
      </node>
      <node id="1">
        <label>cssparser/CSSUtils.h</label>
        <link refid="d0/d29/CSSUtils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>cstdlib</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>cssparser/CSSUtils.h</label>
        <link refid="d0/d29/CSSUtils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cssparser/CSSParser.cpp</label>
        <link refid=""/>
      </node>
      <node id="2">
        <label>cssparser/CSSParser.h</label>
        <link refid=""/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cssparser/main.cpp</label>
        <link refid=""/>
      </node>
      <node id="5">
        <label>cssparser/CSSUtils.cpp</label>
        <link refid=""/>
      </node>
    </invincdepgraph>
    <innerclass refid="d6/d0d/classCSSUtils" prot="public">CSSUtils</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/><sp/>CSSParser</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/><sp/>A<sp/>Simple<sp/>C++<sp/>CSS<sp/>Parser</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**<sp/><sp/>Copyright<sp/>(C)<sp/>2021<sp/><sp/>Kevin<sp/>B.<sp/>Hendricks,<sp/>Stratford,<sp/>Ontario,<sp/>Canada</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/><sp/>License:<sp/>LGPL<sp/>v2.1<sp/>or<sp/>later</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/><sp/>Extracted<sp/>and<sp/>modified<sp/>from:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/><sp/>CSSTidy<sp/>(https://github.com/csstidy-c/csstidy)</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/><sp/>CSSTidy<sp/>Portions<sp/>Copyright:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Florian<sp/>Schmitz<sp/>&lt;floele@gmail.com&gt;</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Thierry<sp/>Charbonnel</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Will<sp/>Mitchell<sp/>&lt;aethon@gmail.com&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Brett<sp/>Zamir<sp/>&lt;brettz9@yahoo.com&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>sined_<sp/>&lt;sined_@users.sourceforge.net&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Dmitry<sp/>Leskov<sp/>&lt;git@dmitryleskov.com&gt;</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Kevin<sp/>Coyner<sp/>&lt;kcoyner@debian.org&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Tuukka<sp/>Pasanen<sp/>&lt;pasanen.tuukka@gmail.com&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Frank<sp/>W.<sp/>Bergmann<sp/>&lt;csstidy-c@tuxad.com&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Frank<sp/>Dana<sp/>&lt;ferdnyc@gmail.com&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>CSSTidy<sp/>itself<sp/>is<sp/>Available<sp/>under<sp/>the<sp/>LGPL<sp/>2.1</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>2.1</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>**<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HEADER_CSSUTILS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_CSSUTILS<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d6/d0d/classCSSUtils" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d0d/classCSSUtils" kindref="compound">CSSUtils</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>lowercase<sp/>version<sp/>of<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_ae29a6bee3adc1bdeda51228a45ed48a8_1ae29a6bee3adc1bdeda51228a45ed48a8" kindref="member">strtolower</ref>(std::string<sp/>istring);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apparently<sp/>faster<sp/>replacement<sp/>for<sp/>tolower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_ad5919c2de0a7a7fe172efcf86ebc6eae_1ad5919c2de0a7a7fe172efcf86ebc6eae" kindref="member">chartolower</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>uppercase<sp/>version<sp/>of<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a15ad93bdc92705c92fc9c6c998d3f36a_1a15ad93bdc92705c92fc9c6c998d3f36a" kindref="member">strtoupper</ref>(std::string<sp/>istring);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_a29f00cefd8bc3475be8f613727c7767c_1a29f00cefd8bc3475be8f613727c7767c" kindref="member">chartoupper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>hexadecimal<sp/>number<sp/>(string)<sp/>to<sp/>a<sp/>decimal<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_a9ba1a89ef38bd6008d1e463fb65c752c_1a9ba1a89ef38bd6008d1e463fb65c752c" kindref="member">hexdec</ref>(std::string<sp/>istring);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>char<sp/>to<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a66e43aff6407e43a130b959912be4f66_1a66e43aff6407e43a130b959912be4f66" kindref="member">char2str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>char<sp/>to<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a66e43aff6407e43a130b959912be4f66_1a66e43aff6407e43a130b959912be4f66" kindref="member">char2str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>contents<sp/>of<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a8d6c64ec499fc7daaedb11efb1b20187_1a8d6c64ec499fc7daaedb11efb1b20187" kindref="member">file_get_contents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>filename);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>a<sp/>file<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_adf42b632b3dafd79d8f6013b3e73255c_1adf42b632b3dafd79d8f6013b3e73255c" kindref="member">file_exists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>a<sp/>charcter<sp/>is<sp/>escaped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_aa1941ab849b3f26c29c24d9fe116084a_1aa1941ab849b3f26c29c24d9fe116084a" kindref="member">escaped</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;istring,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>char<sp/>of<sp/>a<sp/>std::string<sp/>at<sp/>pos<sp/>but<sp/>checks<sp/>the<sp/>std::string-length<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_afe0d23972cebed07a91dcf2c7baf3173_1afe0d23972cebed07a91dcf2c7baf3173" kindref="member">s_at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;istring,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implodes<sp/>a<sp/>vector<sp/>of<sp/>std::string<sp/><sp/>e<sp/>(string<sp/>join<sp/>with<sp/>e<sp/>as<sp/>seprator))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a0daea43d1a253dc7cc7126325252fcfe_1a0daea43d1a253dc7cc7126325252fcfe" kindref="member">implode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>e,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>s);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explodes<sp/>a<sp/>std::string<sp/>into<sp/>a<sp/>vector<sp/>of<sp/>std::strings,<sp/>splitting<sp/>at<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="d6/d0d/classCSSUtils_a5ea829b6fe4184f39ec2aa9f16f406c3_1a5ea829b6fe4184f39ec2aa9f16f406c3" kindref="member">explode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>e,<sp/>std::string<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Builds<sp/>a<sp/>compact<sp/>value<sp/>std::string,<sp/>inserting<sp/>spaces<sp/>only<sp/>where<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a579a7bd712be8ebf0b2f8a6e89025366_1a579a7bd712be8ebf0b2f8a6e89025366" kindref="member">build_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>subvalues);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Replaces<sp/>&lt;find&gt;<sp/>with<sp/>&lt;replace&gt;<sp/>in<sp/>&lt;str&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_acde23a75c38d3a931cd71a51c832b0cf_1acde23a75c38d3a931cd71a51c832b0cf" kindref="member">str_replace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>find,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>replace,<sp/>std::string<sp/>str);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>if<sp/>a<sp/>std::string<sp/>exists<sp/>in<sp/>a<sp/>std::string-array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_a0d44f360a195dd93689726f7f65bba82_1a0d44f360a195dd93689726f7f65bba82" kindref="member">in_char_arr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>needle);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_aab27c637bbbbc3ee17c88eaaac93533e_1aab27c637bbbbc3ee17c88eaaac93533e" kindref="member">in_str_array</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>needle);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>isspace()<sp/>and<sp/>isdigit()<sp/>do<sp/>not<sp/>work<sp/>correctly<sp/>with<sp/>UTF-8<sp/>std::strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_a99df2b7feffa035de4d3ebbd79d6b61d_1a99df2b7feffa035de4d3ebbd79d6b61d" kindref="member">ctype_space</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_a1f004dff4b1ce6828402cfd0936bd8b2_1a1f004dff4b1ce6828402cfd0936bd8b2" kindref="member">ctype_digit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_aa20db64977769b804a47139652ac3d56_1aa20db64977769b804a47139652ac3d56" kindref="member">ctype_xdigit</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d0d/classCSSUtils_a67b7bac07006f57e18b2c042bb383b24_1a67b7bac07006f57e18b2c042bb383b24" kindref="member">ctype_alpha</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trims<sp/><sp/>whitespace<sp/>at<sp/>the<sp/>specific<sp/>or<sp/>both<sp/>ends<sp/>of<sp/>a<sp/>std::string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a94fe7f3212d281f585d2b16937f87674_1a94fe7f3212d281f585d2b16937f87674" kindref="member">trim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>istring);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a5ad29bcb25d3721b08a70a94886d3baf_1a5ad29bcb25d3721b08a70a94886d3baf" kindref="member">rtrim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>istring);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a5ad29bcb25d3721b08a70a94886d3baf_1a5ad29bcb25d3721b08a70a94886d3baf" kindref="member">rtrim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>istring,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>chars);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a27019826b6c956c9347a0c0ab169674b_1a27019826b6c956c9347a0c0ab169674b" kindref="member">ltrim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>istring);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>creates<sp/>proper<sp/>indent<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="d6/d0d/classCSSUtils_a68920805832d2c80542fe036bb93ccd2_1a68920805832d2c80542fe036bb93ccd2" kindref="member">indent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lvl,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;base);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>HEADER_CSSUTILS</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="cssparser/CSSUtils.h"/>
  </compounddef>
</doxygen>
